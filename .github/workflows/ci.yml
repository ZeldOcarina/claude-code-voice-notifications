name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18, 20, 22]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Type check
      run: pnpm build

    - name: Test system TTS fallback (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        # Install required packages for Linux notifications
        sudo apt-get update
        sudo apt-get install -y libnotify-bin
        timeout 10s pnpm test:fallback || echo "Fallback test completed"

    - name: Test system TTS fallback (macOS)
      if: matrix.os == 'macos-latest'
      run: timeout 10s pnpm test:fallback || echo "Fallback test completed"

    - name: Test system TTS fallback (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Windows PowerShell TTS test with timeout
        powershell -Command "& { Start-Process -FilePath 'pnpm' -ArgumentList 'test:fallback' -Wait -TimeoutSec 10 }"
      continue-on-error: true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
    - run: pnpm install --frozen-lockfile
    - run: pnpm build